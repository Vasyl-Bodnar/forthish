"std/util" useup
( WIP )

( : geni [ i i :i -> a; -> q[a] ! ] )
(   : F take open ; )
(   [ : SEQ dup 0 <> [ 1 - [ SEQ ] +quote swap dup F rot +quote ] [ pop pop [] ] if ; SEQ ] +quote swap F swap +quote ; )

: .. ( i i -> q[i] )
  [ : SEQ dup 0 <> [ 1 - [ SEQ ] +quote swap dup succ rot +quote ] [ pop pop [] ] if ; SEQ ] +quote +quote ;

: seq->list ( q[i] -> qi )
  open swap quote swap
  : inn dup [] <> [ open rott swap +quote swap inn ] [ ] if ;
  inn ;

: fold ( qa qb :qb a -> qb; -> qb )
  : F take open ; ;
  ( : inn )
  (   swap dup [] <> )
  (     [ swap over hd open F swap tl swap inn ] )
  (     [ pop ] )
  (   if ; )
  ( swap dup hd swap tl swap inn ; )
